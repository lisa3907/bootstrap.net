@inherits BootStrapComponentBase
@using BootStrap.Net.Util

@inject Microsoft.JSInterop.IJSRuntime JSRuntime

@if (IsOpen)
{
<DynamicElement Id="@Id" Attributes="@UnknownParameters" TagName="div" class="@classname" role="tooltip" @onclick="onclick">
    <div ref="arrow" class="arrow"></div>
    @ChildContent
</DynamicElement>
}

@functions {
    private ElementReference arrow;
    private string classname
    {
        get
        {
            var open = IsOpen ? "show" : null;
            var placement = $"bs-popover-{Placement.ToDescriptionString()}";
            return $"popover {placement} {open} {Class}";
        }
    }
    [Parameter] public bool IsOpen { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (IsOpen)
        {
            var placement = Placement.ToDescriptionString();
            await new BootStrapNetInterop(JSRuntime).Popper(Target, Id, arrow, placement);
        }
    }

    private string Id
    {
        get
        {
            return Target + "-popover";
        }
    }
    [Parameter] public Placement Placement { get; set; } = Placement.Auto;
    [Parameter] public string Target { get; set; }
    [Parameter] public string Class { get; set; }
    [Parameter] public string Style { get; set; }
    [Parameter] public RenderFragment ChildContent { get; set; }

    private void onclick()
    {
        IsOpen = false;
    }
}